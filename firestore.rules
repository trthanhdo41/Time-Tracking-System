rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'department_admin'];
    }
    
    // Sessions collection
    match /sessions/{sessionId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                      (request.auth.uid == resource.data.userId || 
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'department_admin']);
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Activity Logs
    match /activityLogs/{logId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // History Records
    match /history/{recordId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Back Soon Records
    match /backSoonRecords/{recordId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Image Delete Requests
    match /imageDeleteRequests/{requestId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'department_admin'];
    }
    
    // Notifications
    match /notifications/{notificationId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null;
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Error Reports
    match /errorReports/{reportId} {
      allow read: if request.auth != null && 
                    (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'department_admin'] ||
                     resource.data.userId == request.auth.uid);
      allow create: if request.auth != null;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'department_admin'];
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // System Settings
    match /systemSettings/{settingId} {
      // Everyone can read settings (staff needs them for CAPTCHA interval, etc.)
      allow read: if request.auth != null;
      // Only admins and department admins can update settings
      allow write: if request.auth != null && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'department_admin'];
    }
  }
}

